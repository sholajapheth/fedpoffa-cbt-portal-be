"""Clean up redundant fields and relationships

Revision ID: ed6a3855de05
Revises: afef16d27ff1
Create Date: 2025-07-20 05:04:45.875018

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ed6a3855de05"
down_revision: Union[str, Sequence[str], None] = "afef16d27ff1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # First, drop the user_courses table
    op.drop_table("user_courses")

    # Remove user columns first
    op.drop_constraint(op.f("users_department_id_fkey"), "users", type_="foreignkey")
    op.drop_column("users", "department_id")
    op.drop_column("users", "level")

    # Note: We'll handle the program_id NOT NULL constraint in a separate migration
    # after creating default programs for existing courses
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("level", sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column("department_id", sa.UUID(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        op.f("users_department_id_fkey"),
        "users",
        "departments",
        ["department_id"],
        ["id"],
    )
    op.alter_column("courses", "program_id", existing_type=sa.UUID(), nullable=True)
    op.create_table(
        "user_courses",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("course_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "enrolled_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["course_id"], ["courses.id"], name=op.f("user_courses_course_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("user_courses_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("user_id", "course_id", name=op.f("user_courses_pkey")),
    )
    # ### end Alembic commands ###
